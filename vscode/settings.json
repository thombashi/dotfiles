{
// Editor

    // Controls the font family.
    "editor.fontFamily": "'Fira Code', 'MyricaM M', Consolas, 'Courier New', monospace",

    // Controls the font size in pixels.
    "editor.fontSize": 12,

    // Enables font ligatures
    "editor.fontLigatures": true,

    // Controls if lines should wrap. The lines will wrap at min(editor.wrappingColumn, viewportWidthInColumns).
    "editor.wordWrap": "on",

    // Insert snippets when their prefix matches. Works best when 'quickSuggestions' aren't enabled.
    "editor.tabCompletion": true,

    // Controls whether the editor should render whitespace characters
    "editor.renderWhitespace": "boundary",

    // Controls whether the editor should render indent guides
    "editor.renderIndentGuides": true,

    // Controls if the minimap is shown
    "editor.minimap.enabled": true,

// Terminal

  // Controls the font size in pixels of the terminal.
  "terminal.integrated.fontSize": 11,

// Files

    // The default end of line character.
    "files.eol": "\n",

    // When enabled, will trim trailing whitespace when you save a file.
    "files.trimTrailingWhitespace": true,

    // Controls auto save of dirty files. Accepted values:  "off", "afterDelay", "onFocusChange" (editor loses focus), "onWindowChange" (window loses focus). If set to "afterDelay", you can configure the delay in "files.autoSaveDelay".
    "files.autoSave": "afterDelay",

    // Controls the delay in ms after which a dirty file is saved automatically. Only applies when "files.autoSave" is set to "afterDelay"
    "files.autoSaveDelay": 60000,

// cpp

    // Coding style, currently supports: Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Use "file" to load the style from a .clang-format file in the current or parent directory. Use "{key: value, ...}" to set specific parameters, e.g.: "{ BasedOnStyle: LLVM, IndentWidth: 8 }"
    "C_Cpp.clang_format_style": "Visual Studio",

    // Name of the predefined style used as a fallback in case clang-format is invoked with style "file" but the .clang-format file is not found. Possible values are Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, or none.
    "C_Cpp.clang_format_fallbackStyle": "Visual Studio",

    // If set, overrides the include sorting behavior determined by the SortIncludes parameter.
    "C_Cpp.clang_format_sortIncludes": true,

    // Enable clang-format on save.
    "C_Cpp.clang_format_formatOnSave": true,

// Python Configuration

    // Whether to lint Python files using pylama.
    "python.linting.pylamaEnabled": true,

    // Arguments passed in. Each argument is a separate item in the array.
    "python.linting.pylintArgs": ["--errors-only"],

    // Format the document upon saving.
    "python.formatting.formatOnSave": true,

// javascript autolinting

    // Set default linters to be used when no configuration file can be found in the current workspace.
    "jsAutolint.defaultLinters": [
        "tslint",
        "jshint"
    ],
}
